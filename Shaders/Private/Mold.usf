#include "/Engine/Public/Platform.ush"

//--------------------------------------------------------------------------------------
// Structs
//--------------------------------------------------------------------------------------

struct FAgent
{
	float2 position;
    float angle;
};

//--------------------------------------------------------------------------------------
// Buffers
//--------------------------------------------------------------------------------------

RWStructuredBuffer<FAgent> agents;
RWTexture2D<float4> TrailMap;

//--------------------------------------------------------------------------------------
// Variables
//--------------------------------------------------------------------------------------

uint NumAgents;
int Width;
int Height;
float MoveSpeed;
float DeltaTime;
float Time;

uint hash(uint state)
{
    state ^= 2747636419u;
    state *= 2654435769u;
    state ^= state >> 16;
    state *= 2654435769u;
    state ^= state >> 16;
    state *= 2654435769u;
    return state;
}

float nrand(float2 uv)
{
    return frac(sin(dot(uv, float2(12.9898, 78.233))) * 43758.5453);
}

float scaleToRange01(uint state)
{
    return state / 4294967295.0;
}

[numthreads(16, 1, 1)]
void MainComputeShader(uint3 id : SV_DispatchThreadID)
{   
	if (id.x >= NumAgents) {return;}

    const FAgent agent = agents[id.x];

    float2 position = agent.position;
    const uint random = hash(position.y * Width + position.x + hash(id.x + Time * 100000));

    const float2 direction = float2(cos(agent.angle), sin(agent.angle));
    float2 new_position = agent.position + direction * MoveSpeed * min(0.01,DeltaTime);

    float value = agent.angle;
    bool belowX = new_position.x < 0;
    bool belowY = new_position.y < 0;
    bool greaterX = new_position.x > Width;
    bool greaterY = new_position.y > Height;
    //if (belowX || belowY || greaterX || greaterY){
		new_position.x = min(Width-0.1, max(0,new_position.x));
		new_position.y = min(Height-0.1, max(0,new_position.y));
        value = scaleToRange01(random) * 2 * 3.1415;
    //}

    agents[id.x].position = new_position;
    agents[id.x].angle = value;
    TrailMap[int2(new_position.x, new_position.y)] = 1;
}