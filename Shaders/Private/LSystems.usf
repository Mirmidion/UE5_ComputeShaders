#include "/Engine/Public/Platform.ush"

//--------------------------------------------------------------------------------------
// Structs
//--------------------------------------------------------------------------------------

struct F2DLine {
	float2 start;
	float2 end;
};

//--------------------------------------------------------------------------------------
// Buffers
//--------------------------------------------------------------------------------------

RWStructuredBuffer<F2DLine> Lines;
RWTexture2D<float4> TrailMap;

//--------------------------------------------------------------------------------------
// Variables
//--------------------------------------------------------------------------------------

int NumLines;
float Time;
float PercentPerSecond;

[numthreads(32, 1, 1)]
void MainComputeShader(uint3 id : SV_DispatchThreadID)
{   
	if (id.x >= (uint)NumLines)
	{
		return;
	}

	F2DLine current_line = Lines[id.x];
	//float distance = sqrt(pow(abs(current_line.end.x - current_line.start.x),2) + pow(abs(current_line.end.y - current_line.start.y),2));
	const float2 offset_fraction = (current_line.end - current_line.start) / 2000.f;
	float2 current_location = current_line.start;

	//if (Time * percent_per_second - (id.x*100.f)  > 0)
	//for (int i = 0; i < min(Time * percent_per_second - (id.x*100.f),100); i++)
	for (int i = 0; i < min(Time * PercentPerSecond*20,2000); i++)
	{
		TrailMap[int2(round(current_location))] = float4(1,1,1,1);
		current_location += offset_fraction;
	}
}